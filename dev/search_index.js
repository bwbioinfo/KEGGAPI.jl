var documenterSearchIndex = {"docs":
[{"location":"man/workflow/#A-More-Realistic-Workflow","page":"A More Realistic Workflow","title":"A More Realistic Workflow","text":"","category":"section"},{"location":"man/guide/#Package-Guide","page":"Guide","title":"Package Guide","text":"","category":"section"},{"location":"man/guide/#Installation","page":"Guide","title":"Installation","text":"","category":"section"},{"location":"man/guide/","page":"Guide","title":"Guide","text":"KEGGAPI can be installed using the Julia package manager. From the Julia REPL, type ] to enter the Pkg REPL mode and run","category":"page"},{"location":"man/guide/","page":"Guide","title":"Guide","text":"pkg> add https://github.com/bwbioinfo/KEGGAPI.jl","category":"page"},{"location":"man/examples/#Some-Examples","page":"Some Examples","title":"Some Examples","text":"","category":"section"},{"location":"man/examples/#KEGGAPI.conv","page":"Some Examples","title":"KEGGAPI.conv","text":"","category":"section"},{"location":"man/examples/","page":"Some Examples","title":"Some Examples","text":"Examples analogous to KEGG Conv","category":"page"},{"location":"man/examples/","page":"Some Examples","title":"Some Examples","text":"Querying the API for a simple conversion returns a list with:","category":"page"},{"location":"man/examples/","page":"Some Examples","title":"Some Examples","text":"The API call\nThe column headers of the call ( if the result is tabular )\nThe data","category":"page"},{"location":"man/examples/","page":"Some Examples","title":"Some Examples","text":"This allows to easily convert to a data frame:","category":"page"},{"location":"man/examples/","page":"Some Examples","title":"Some Examples","text":"using KEGGAPI\nusing DataFrames","category":"page"},{"location":"man/examples/","page":"Some Examples","title":"Some Examples","text":"output = KEGGAPI.conv(\"eco\", \"ncbi-geneid\"); \nfirst(DataFrame(\n  output.data,\n  output.colnames\n), 5)","category":"page"},{"location":"man/examples/","page":"Some Examples","title":"Some Examples","text":"output = KEGGAPI.conv(\"ncbi-geneid\", \"eco\");\nfirst(DataFrame(\n  output.data,\n  output.colnames\n), 5)","category":"page"},{"location":"man/examples/","page":"Some Examples","title":"Some Examples","text":"output = KEGGAPI.conv(\"ncbi-proteinid\", \"hsa:10458+ece:Z5100\");\nDataFrame(\n  output.data,\n  output.colnames\n)","category":"page"},{"location":"man/examples/","page":"Some Examples","title":"Some Examples","text":"output = KEGGAPI.conv(\"genes\", \"ncbi-geneid:948364\");\nDataFrame(\n  output.data,\n  output.colnames\n)","category":"page"},{"location":"","page":"Home","title":"Home","text":"CurrentModule = KEGGAPI","category":"page"},{"location":"#KEGGAPI","page":"Home","title":"KEGGAPI","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Documentation for KEGGAPI.","category":"page"},{"location":"","page":"Home","title":"Home","text":"An API interface to KEGG","category":"page"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"man/functions/#KEGGAPI.jl-Functions","page":"KEGGAPI.jl Functions","title":"KEGGAPI.jl Functions","text":"","category":"section"},{"location":"man/functions/","page":"KEGGAPI.jl Functions","title":"KEGGAPI.jl Functions","text":"Modules = [KEGGAPI]","category":"page"},{"location":"man/functions/#KEGGAPI.conv-Tuple{String, String}","page":"KEGGAPI.jl Functions","title":"KEGGAPI.conv","text":"KEGGAPI.conv(<targetdb>, <sourcedb>)\n\nConvert KEGG identifiers to/from outside identifiers.\n\nExample:\n\nusing KEGGAPI\nKEGGAPI.conv(\"eco\", \"ncbi-geneid\")\nKEGGAPI.conv(\"ncbi-geneid\", \"eco\")\nKEGGAPI.conv(\"ncbi-proteinid\", \"hsa:10458+ece:Z5100\")\nKEGGAPI.conv(\"genes\", \"ncbi-geneid:948364\")\n\n\n\n\n\n","category":"method"},{"location":"man/functions/#KEGGAPI.find","page":"KEGGAPI.jl Functions","title":"KEGGAPI.find","text":"KEGGAPI.find(database, query) -> KeggTupleList\n\nFind entries in a specific database from the KEGG API.\n\nusing KEGGAPI\nKEGGAPI.find(\"compound\",\"glucose\")\n\n\n\n\n\n","category":"function"},{"location":"man/functions/#KEGGAPI.get_image-Tuple{String}","page":"KEGGAPI.jl Functions","title":"KEGGAPI.get_image","text":"KEGGAPI.get_image(pathway) -> Image\n\nGet an image of a specific pathway from the KEGG API.\n\nExample:\n\nKEGGAPI.get_image(\"hsa00010\")\n\n\n\n\n\n","category":"method"},{"location":"man/functions/#KEGGAPI.info-Tuple{String}","page":"KEGGAPI.jl Functions","title":"KEGGAPI.info","text":"KEGGAPI.info(database) -> String\n\nGet information about a specific database from the KEGG API.\n\nExample:\n\nKEGGAPI.info(\"kegg\")\n\n\n\n\n\n","category":"method"},{"location":"man/functions/#KEGGAPI.kegg_get","page":"KEGGAPI.jl Functions","title":"KEGGAPI.kegg_get","text":"KEGGAPI.get(query, option) -> Vector\n\nGet entries from across the KEGG database. The get function takes a vector of strings and returns a vector containing the urls used and the data returned.\n\nThe get function will split the vector into groups of 10 and make a request for each chunk.\n\nExamples\n\nusing KEGGAPI\nkegg_get_genes = \n    KEGGAPI.kegg_get(\n        [\"hsa:10458\", \"hsa:10458\", \"hsa:10458\", \"hsa:10458\"], \n        \"ntseq\"\n        );\nfirst(kegg_get_genes)\nkegg_get_compounds = \nKEGGAPI.kegg_get(\n    [\"C01290\",\"G00092\"]\n    );\nfirst(kegg_get_compounds)\n\n\n\n\n\n","category":"function"},{"location":"man/functions/#KEGGAPI.link-Tuple{String, String}","page":"KEGGAPI.jl Functions","title":"KEGGAPI.link","text":"KEGGAPI.conv(<targetdb>, <sourcedb>)\n\nFind related entries by using database cross-references\n\nExample:\n\nKEGGAPI.link(\"pathway\", \"hsa\")\n\n\n\n\n\n","category":"method"},{"location":"man/functions/#KEGGAPI.list","page":"KEGGAPI.jl Functions","title":"KEGGAPI.list","text":"KEGGAPI.list(database)\n\nGet a list of entries from a specific database from the KEGG API.\n\nExample:\n\nKEGGAPI.list(\"pathway\")\n\n\n\n\n\n","category":"function"},{"location":"man/functions/#KEGGAPI.request-Tuple{String}","page":"KEGGAPI.jl Functions","title":"KEGGAPI.request","text":"request(url)\n\nMake a request to the specified URL and return the response body as a string. If an error occurs, a RequestError is thrown. This function is not intended for direct use. Instead, use the info, list, and find, etc. functions.\n\nExamples\n\nrequest(\"https://rest.kegg.jp/info/kegg\")\n\n\n\n\n\n","category":"method"},{"location":"man/functions/#KEGGAPI.request_other-Tuple{String}","page":"KEGGAPI.jl Functions","title":"KEGGAPI.request_other","text":"request_other(url)\n\nMake a request to the specified URL and return the response body as a vector. If an error occurs, a RequestError is thrown. This function is not intended for direct use.\n\nExamples\n\nrequest_other(\"https://rest.kegg.jp/image/hsa00010\")\n\n\n\n\n\n","category":"method"},{"location":"man/functions/#KEGGAPI.save_image-Tuple{Vector, String}","page":"KEGGAPI.jl Functions","title":"KEGGAPI.save_image","text":"KEGGAPI.save_image(image, filename) -> filename\n\nSave an image to a file.\n\nExamples\n\nimage = KEGGAPI.get_image(\"hsa00010\")\nKEGGAPI.save_image(image, \"glycolysis.png\")\n\n\n\n\n\n","category":"method"}]
}
